/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF, MeshTransmissionMaterial } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    CD_center: THREE.Mesh;
    ["1box"]: THREE.Mesh;
    cd: THREE.Mesh;
    ctr: THREE.Mesh;
    cd_cover_2: THREE.Mesh;
    cd_cover_1: THREE.Mesh;
    cd_cover_backup: THREE.Mesh;
    Cube002: THREE.Mesh;
    Cube003: THREE.Mesh;
    Cube004: THREE.Mesh;
    Cube005: THREE.Mesh;
    Cube006: THREE.Mesh;
    Cube001: THREE.Mesh;
    r2: THREE.Mesh;
    r: THREE.Mesh;
  };
  materials: {
    ["Main_Dispersed Glass"]: THREE.MeshStandardMaterial;
    Main_Hologram: THREE.MeshStandardMaterial;
    ["Red_Strata Cliff Rock"]: THREE.MeshPhysicalMaterial;
    crystal_yellow: THREE.MeshPhysicalMaterial;
    crystal_red: THREE.MeshPhysicalMaterial;
    crystal_orange: THREE.MeshPhysicalMaterial;
    ["crystal_purple.001"]: THREE.MeshPhysicalMaterial;
  };
};
// @ts-ignore
export function RedCD(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("glb/red.glb") as GLTFResult;

  const config = {
    baseColor: "#73807c",
    transmission: 1.14,
    thickness: 0.2,
    backsideThickness: 0.28,
    roughness: 0.1,
    chromaticAberration: 0.1,
    anisotropicBlur: 0.1,
    distortion: 0.1,
    distortionScale: 0.0,
    temporalDistortion: 0.9,
    transmissionSampler: false,
    backside: true,
    samples: 6,
  };
  materials.Main_Hologram = new THREE.MeshStandardMaterial({
    color: 0x000000,
    roughness: 0.5,
    metalness: 0.1,
    transparent: true,
    opacity: 0.5,
  });

  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.CD_center.geometry}
        material={nodes.CD_center.material}
        scale={0.45}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["1box"].geometry}
        material={materials["Main_Dispersed Glass"]}
        scale={0.45}
      >
        <MeshTransmissionMaterial {...config} />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.cd.geometry}
        material={materials.Main_Hologram}
        position={[0, 0.006, 0]}
        scale={0.912}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.ctr.geometry}
        material={materials["Main_Dispersed Glass"]}
        scale={0.165}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.cd_cover_2.geometry}
        material={materials["Red_Strata Cliff Rock"]}
        position={[-0.003, 0.071, 0.003]}
        scale={[0.912, 1.49, 0.912]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.cd_cover_1.geometry}
        material={materials["Red_Strata Cliff Rock"]}
        position={[0, 0.035, 0]}
        scale={0.893}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.cd_cover_backup.geometry}
        material={nodes.cd_cover_backup.material}
        position={[0, 0.038, 0]}
        scale={0.912}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube002.geometry}
        material={materials.crystal_yellow}
        position={[0.138, 0.136, -0.355]}
        rotation={[-0.172, 0, 0]}
        scale={0.1}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube003.geometry}
        material={materials.crystal_red}
        position={[0.268, 0.124, -0.297]}
        rotation={[-0.48, -0.65, -0.443]}
        scale={0.06}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube004.geometry}
        material={materials.crystal_orange}
        position={[-0.093, 0.099, 0.501]}
        rotation={[0.356, -0.016, 0.092]}
        scale={[0.109, 0.072, 0.109]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube005.geometry}
        material={materials.crystal_red}
        position={[-0.345, 0.181, 0.197]}
        rotation={[0.293, -0.411, 0.407]}
        scale={[0.218, 0.123, 0.218]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube006.geometry}
        material={materials.crystal_orange}
        position={[0.429, 0.099, -0.008]}
        rotation={[-0.102, 0.051, -0.512]}
        scale={[0.109, 0.072, 0.109]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube001.geometry}
        material={materials["crystal_purple.001"]}
        position={[0.424, 0.085, -0.521]}
        rotation={[-0.48, -0.65, -0.443]}
        scale={0.06}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.r2.geometry}
        material={materials["Red_Strata Cliff Rock"]}
        position={[-0.335, 0.131, -0.33]}
        rotation={[-Math.PI, 0.308, -Math.PI]}
        scale={[0.145, 0.098, 0.235]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.r.geometry}
        material={materials["Red_Strata Cliff Rock"]}
        position={[0.377, 0.131, 0.318]}
        rotation={[0, -0.545, 0]}
        scale={[0.145, 0.098, 0.195]}
      />
    </group>
  );
}

useGLTF.preload("glb/red.glb");
